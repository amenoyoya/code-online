/**
 * GoにはC言語同様、ポインタの概念が存在する
 * ポインタは、値が格納されているメモリのアドレスを指す
 *
 * 変数 T のポインタは *T 型で、そのゼロ値は nil となる
 *   var p *int = nil
 *
 * ある値を格納している変数のポインタを引き出すには & オペレータを使う
 *   i := 42
 *   p = &i
 *
 * ポインタの指す先の値を取得するには * オペレータを使う
 *   fmt.Println(*p) // ポインタ p を通して i から値を読み出す
 */

package main

import "fmt"

func main() {
	i, j := 42, 2701

	p := &i // 変数 i へのポインタ
	fmt.Println(*p) // ポインタ p を通して i から値を読み出す => 42

	p = &j // 変数 j へのポインタ
	*p = *p / 37 // ポインタ p を通して j の値を j / 37 に変更
	fmt.Println(j) // j の値が 2701 / 37 = 73 になっている
}
